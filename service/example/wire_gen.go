// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//go:build !wireinject
// +build !wireinject

package example

import (
	"github.com/google/wire"
	"go-zentao-task/model/example"
)

// Injectors from wire.go:

func InitializeServiceExample() *ServiceExample {
	wireExample1 := example.NewWireExample1()
	wireExample2 := example.NewWireExample2()
	serviceExample := NewServiceExample(wireExample1, wireExample2)
	return serviceExample
}

func InitializeServiceExample2() *ServiceExample {
	wireExample1 := example.NewWireExample1()
	wireExample2 := example.NewWireExample2()
	serviceExample := &ServiceExample{
		W1: wireExample1,
		W2: wireExample2,
	}
	return serviceExample
}

// wire.go:

type ServiceExample struct {
	W1 *example.WireExample1
	W2 *example.WireExample2
}

func NewServiceExample(w1 *example.WireExample1, w2 *example.WireExample2) *ServiceExample {
	return &ServiceExample{W1: w1, W2: w2}
}

var Set = wire.NewSet(example.NewWireExample1, example.NewWireExample2, wire.Struct(new(ServiceExample), "*"))
